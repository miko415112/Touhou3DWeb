{"version":3,"file":"static/js/788.4fdc0117.chunk.js","mappings":"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","sources":["components/character.js","components/profile.js","components/environment.js","containers/hooks/control.js","containers/localPlayer.js","containers/players.js","containers/bullets.js","containers/gamePage.js"],"sourcesContent":["import {\r\n  RemiliaModel,\r\n  KoishiModel,\r\n  SuwakoModel,\r\n  SakuyaModel,\r\n  SanaeModel,\r\n  MeilingModel,\r\n} from './resource';\r\nimport { useState, useEffect, memo } from 'react';\r\nimport { Euler, Quaternion, Vector3 } from 'three';\r\nimport { useBox } from '@react-three/cannon';\r\nimport { useUser } from '../containers/hooks/context';\r\nimport { getPowerTexture } from '../components/resource';\r\n\r\nexport const characterList = [\r\n  'Remilia',\r\n  'Koishi',\r\n  'Suwako',\r\n  'Sakuya',\r\n  'Sanae',\r\n  'Meiling',\r\n];\r\n\r\nconst Tools = memo(({ showBox, immune, dead }) => {\r\n  return (\r\n    <>\r\n      <mesh visible={showBox}>\r\n        <boxGeometry args={[1.3, 1.3, 1.3]} />\r\n        <meshBasicMaterial color={'White'} />\r\n      </mesh>\r\n      <mesh visible={!dead && immune ? true : false}>\r\n        <sphereGeometry args={[1.5]} />\r\n        <meshBasicMaterial color={'#D87D68'} />\r\n      </mesh>\r\n      <mesh visible={dead ? true : false}>\r\n        <boxGeometry args={[2.3, 2.3, 2.3]} />\r\n        <meshBasicMaterial map={getPowerTexture()} />\r\n      </mesh>\r\n    </>\r\n  );\r\n});\r\n\r\nconst Model = (props) => {\r\n  switch (props.modelName) {\r\n    case 'Remilia':\r\n      return <RemiliaModel {...props} />;\r\n    case 'Koishi':\r\n      return <KoishiModel {...props} />;\r\n    case 'Suwako':\r\n      return <SuwakoModel {...props} />;\r\n    case 'Sakuya':\r\n      return <SakuyaModel {...props} />;\r\n    case 'Sanae':\r\n      return <SanaeModel {...props} />;\r\n    case 'Meiling':\r\n      return <MeilingModel {...props} />;\r\n  }\r\n  return <RemiliaModel {...props} />;\r\n};\r\n\r\nexport const Character = (props) => {\r\n  const [ref, api] = useBox(() => ({\r\n    mass: 0,\r\n    type: 'Kinematic',\r\n    args: [1.3, 1.3, 1.3],\r\n    collisionFilterMask: props.mask,\r\n    collisionFilterGroup: props.group,\r\n    onCollideBegin: props.onCollideBegin,\r\n  }));\r\n\r\n  const { showBox } = useUser();\r\n\r\n  if (props.position !== undefined)\r\n    api.position.set(props.position.x, props.position.y, props.position.z);\r\n\r\n  return (\r\n    <>\r\n      <group ref={ref}>\r\n        <Tools showBox={showBox} immune={props.immune} dead={props.dead} />\r\n      </group>\r\n      {props.dead === true ? null : <Model {...props} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const RotationCharacter = ({ modelName, spin, scale }) => {\r\n  const [rotation, setRotation] = useState(new Euler(0, 0, 0));\r\n\r\n  useEffect(() => {\r\n    if (!spin) return;\r\n    const id = setInterval(() => {\r\n      setRotation((prev) => {\r\n        const pre_q = new Quaternion().setFromEuler(prev);\r\n        const delta_q = new Quaternion().setFromAxisAngle(\r\n          new Vector3(0, 1, 0),\r\n          0.1\r\n        );\r\n        const new_q = pre_q.multiply(delta_q);\r\n        return new Euler().setFromQuaternion(new_q);\r\n      });\r\n    }, 60);\r\n    return () => {\r\n      clearInterval(id);\r\n    };\r\n  }, [spin]);\r\n\r\n  return <Character modelName={modelName} rotation={rotation} scale={scale} />;\r\n};\r\n","import styled from 'styled-components';\r\nimport { AimOutlined } from '@ant-design/icons';\r\n\r\nconst HomeRowWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  color: White;\r\n  font-weight: bold;\r\n  font-size: 25pt;\r\n  gap: 20px;\r\n\r\n  img {\r\n    width: 45px;\r\n    height: 45px;\r\n  }\r\n`;\r\n\r\nconst GameRowWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  color: ${(props) => (props.dead ? 'red' : 'white')};\r\n  font-size: 18pt;\r\n  gap: 20px;\r\n\r\n  img {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n`;\r\n\r\nexport const HomePageProfile = ({ src, name }) => {\r\n  return (\r\n    <div className='profile'>\r\n      <HomeRowWrapper>\r\n        <img src={src} />\r\n        <div>{name}</div>\r\n      </HomeRowWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const GamePageProfile = ({ playerList }) => {\r\n  return (\r\n    <div className='profile'>\r\n      {playerList?.map((player, index) => (\r\n        <GameRowWrapper key={index} dead={player.healthPoints <= 0}>\r\n          <img src={player.picture} />\r\n          <div>{player.name}</div>\r\n          <div>\r\n            {player.healthPoints <= 0 ? 'LOSE' : 'HP :' + player.healthPoints}\r\n          </div>\r\n          {player.isLeader ? <AimOutlined /> : null}\r\n        </GameRowWrapper>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { getSkyboxTextureArray, getGroundTexture } from './resource';\r\nimport { useThree } from '@react-three/fiber';\r\nexport const Skybox = () => {\r\n  const { scene } = useThree();\r\n  scene.background = getSkyboxTextureArray();\r\n  return null;\r\n};\r\n\r\nexport const Ground = () => {\r\n  return (\r\n    <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, -5, 0]}>\r\n      <circleGeometry attach='geometry' args={[200]} />\r\n      <meshBasicMaterial attach='material' map={getGroundTexture()} />\r\n    </mesh>\r\n  );\r\n};\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport { useSphere } from '@react-three/cannon';\r\nimport { Euler, Quaternion, Vector3 } from 'three';\r\nimport { useKeyboard, useMouse } from './input';\r\n\r\nconst move_speed = 6;\r\nconst yaw_speed = 1;\r\nconst yaw_deflection = Math.PI / 6;\r\nconst pitch_deflection = Math.PI / 6;\r\n\r\nconst keyMap = {\r\n  KeyW: 'pitch_up',\r\n  KeyS: 'pitch_down',\r\n  KeyA: 'yaw_left',\r\n  KeyD: 'yaw_right',\r\n  KeyH: 'shoot0',\r\n  KeyJ: 'shoot1',\r\n  KeyK: 'shoot2',\r\n  KeyL: 'shoot3',\r\n  Space: 'move_forward',\r\n  ShiftLeft: 'slow_down',\r\n};\r\n\r\nconst mouseMap = {\r\n  0: 'move_forward',\r\n};\r\n\r\nconst calcVelocity = (keyboardMovement, MouseMovement, rigidState) => {\r\n  const { yaw_left, yaw_right, move_forward, slow_down } = keyboardMovement;\r\n  const factor = slow_down ? 0.6 : 1;\r\n\r\n  const lin_velocity = new Vector3()\r\n    .set(0, 0, move_forward ? -1 : 0)\r\n    .normalize()\r\n    .multiplyScalar(move_speed * factor)\r\n    .applyEuler(rigidState.modelEuler);\r\n\r\n  const ang_velocity = new Vector3()\r\n    .set(0, (yaw_left ? 1 : 0) - (yaw_right ? 1 : 0), 0)\r\n    .normalize()\r\n    .multiplyScalar(yaw_speed * factor);\r\n\r\n  const velocity = {\r\n    lin_velocity: lin_velocity,\r\n    ang_velocity: ang_velocity,\r\n  };\r\n\r\n  return velocity;\r\n};\r\n\r\nconst subscribeApi = (api, setPos, setRot) => {\r\n  const unsubscibePos = api.position.subscribe((p) => setPos(p));\r\n  const unsubscibeRot = api.rotation.subscribe((r) => setRot(r));\r\n\r\n  return () => {\r\n    unsubscibePos();\r\n    unsubscibeRot();\r\n  };\r\n};\r\n\r\nconst trackSphere = (p, r, keyboardMovement, setRigidState) => {\r\n  const { yaw_right, yaw_left, pitch_up, pitch_down } = keyboardMovement;\r\n\r\n  const sphereEuler = new Euler(r[0], r[1], r[2]);\r\n  const sphereQ = new Quaternion().setFromEuler(sphereEuler);\r\n  const yawQ = new Quaternion().setFromAxisAngle(\r\n    new Vector3(0, 1, 0),\r\n    yaw_deflection * (yaw_right ? -1 : yaw_left ? 1 : 0)\r\n  );\r\n  const pitchQ = new Quaternion().setFromAxisAngle(\r\n    new Vector3(1, 0, 0),\r\n    pitch_deflection * (pitch_up ? 1 : pitch_down ? -1 : 0)\r\n  );\r\n\r\n  const modelQ = sphereQ.multiply(yawQ).multiply(pitchQ);\r\n  const modelEuler = new Euler().setFromQuaternion(modelQ);\r\n\r\n  const spherePos = new Vector3(p[0], p[1], p[2]);\r\n  const offset = new Vector3(0, 0, 5).applyEuler(sphereEuler);\r\n  const cameraPos = new Vector3().addVectors(spherePos, offset);\r\n  setRigidState({\r\n    modelEuler: modelEuler,\r\n    cameraEuler: sphereEuler,\r\n    modelPos: spherePos,\r\n    cameraPos: cameraPos,\r\n  });\r\n};\r\n\r\nexport const useControl = () => {\r\n  const keyboardMovement = useKeyboard(keyMap);\r\n  const MouseMovement = useMouse(mouseMap);\r\n  const [pos, setPos] = useState([0, 0, 0]);\r\n  const [rot, setRot] = useState([0, 0, 0]);\r\n  const [rigidState, setRigidState] = useState({\r\n    modelPos: new Vector3(0, 0, 0),\r\n    modelEuler: new Euler(0, 0, 0),\r\n    cameraPos: new Vector3(0, 0, 3),\r\n    cameraEuler: new Euler(0, 0, 0),\r\n  });\r\n  const [fireState, setFireState] = useState([]);\r\n  const [ref, api] = useSphere(() => ({\r\n    mass: 0,\r\n    type: 'Dynamic',\r\n    position: [0, 0, 0],\r\n  }));\r\n  useEffect(() => {\r\n    const unsubscibe = subscribeApi(api, setPos, setRot);\r\n    return unsubscibe;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    trackSphere(pos, rot, keyboardMovement, setRigidState);\r\n  }, [pos, rot]);\r\n\r\n  useEffect(() => {\r\n    const newFireState = [];\r\n    if (keyboardMovement.shoot0) {\r\n      newFireState.push('shoot0');\r\n    } else if (keyboardMovement.shoot1) {\r\n      newFireState.push('shoot1');\r\n    } else if (keyboardMovement.shoot2) {\r\n      newFireState.push('shoot2');\r\n    } else if (keyboardMovement.shoot3) {\r\n      newFireState.push('shoot3');\r\n    }\r\n    setFireState(newFireState);\r\n  }, [keyboardMovement]);\r\n\r\n  useEffect(() => {\r\n    const velocity = calcVelocity(keyboardMovement, MouseMovement, rigidState);\r\n    api.velocity.set(...velocity.lin_velocity);\r\n    api.angularVelocity.set(...velocity.ang_velocity);\r\n  }, [keyboardMovement, rigidState]);\r\n\r\n  return { rigidState, fireState };\r\n};\r\n","import { Character } from '../components/character';\r\nimport { useControl } from './hooks/control';\r\nimport { useThree } from '@react-three/fiber';\r\nimport { useNetwork } from './hooks/network';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { useUser } from './hooks/context';\r\n\r\nconst fireTimeGap = [80, 400, 300, 400];\r\nconst validateFireTime = (fireTimeArray, isLeader, fireState) => {\r\n  const validFireState = [];\r\n  const curTime = Date.now();\r\n  for (let i = 0; i < fireState.length; i++) {\r\n    const shootIndex = parseInt(fireState[i].replace('shoot', ''));\r\n    if (\r\n      (isLeader || shootIndex === 0) &&\r\n      curTime - fireTimeArray[shootIndex] > fireTimeGap[shootIndex]\r\n    ) {\r\n      validFireState.push(fireState[i]);\r\n      fireTimeArray[shootIndex] = curTime;\r\n    }\r\n  }\r\n  return validFireState;\r\n};\r\n\r\nexport const LocalPlayer = () => {\r\n  const { rigidState, fireState } = useControl();\r\n  const { updatePlayer } = useNetwork();\r\n  const { camera } = useThree();\r\n  const { modelName, roomID, playerID, isLeader } = useUser();\r\n  const [healthPoints, setHealthPoints] = useState(4);\r\n  const preUpdateTime = useRef(0);\r\n  const preFireTime = useRef([0, 0, 0, 0]);\r\n  const immune = useRef(false);\r\n\r\n  camera.position.copy(rigidState.cameraPos);\r\n  camera.rotation.setFromVector3(rigidState.cameraEuler);\r\n\r\n  const handleCollision = () => {\r\n    if (!immune.current) {\r\n      setHealthPoints((prev) => prev - 1);\r\n      immune.current = true;\r\n      setTimeout(() => {\r\n        immune.current = false;\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const curTime = Date.now();\r\n    if (curTime - preUpdateTime.current > 80) {\r\n      updatePlayer(roomID, playerID, {\r\n        rigidState,\r\n        fireState:\r\n          healthPoints > 0\r\n            ? validateFireTime(preFireTime.current, isLeader, fireState)\r\n            : [],\r\n        healthPoints,\r\n        immune: immune.current,\r\n      });\r\n      preUpdateTime.current = Date.now();\r\n    }\r\n  }, [rigidState, fireState, healthPoints]);\r\n\r\n  return (\r\n    <>\r\n      <Character\r\n        modelName={modelName}\r\n        position={rigidState?.modelPos}\r\n        rotation={rigidState?.modelEuler}\r\n        scale={0.1}\r\n        mask={1}\r\n        group={1}\r\n        onCollideBegin={handleCollision}\r\n        immune={immune.current}\r\n        dead={healthPoints <= 0}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { Character } from '../components/character';\r\nimport { useNetwork } from './hooks/network';\r\nimport { Euler, Vector3 } from 'three';\r\nimport { useUser } from './hooks/context';\r\nimport { LocalPlayer } from './localPlayer';\r\n\r\nexport const Players = () => {\r\n  const { playerList } = useNetwork();\r\n  const { playerID } = useUser();\r\n\r\n  return (\r\n    <>\r\n      <LocalPlayer />\r\n      {playerList?.map((player, idx) => {\r\n        if (!player.rigidState) return null;\r\n        if (!player.rigidState.modelPos) return null;\r\n        if (!player.rigidState.modelEuler) return null;\r\n        if (player.playerID === playerID) return null;\r\n        return (\r\n          <Character\r\n            key={playerID}\r\n            modelName={player.modelName}\r\n            position={new Vector3().copy(player.rigidState.modelPos)}\r\n            rotation={new Euler().copy(player.rigidState.modelEuler)}\r\n            scale={0.1}\r\n            mask={0}\r\n            group={0}\r\n            onCollideBegin={() => {}}\r\n            immune={player.immune}\r\n            dead={player.healthPoints <= 0}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport { useSphere } from '@react-three/cannon';\r\nimport { useNetwork } from './hooks/network';\r\nimport { Vector3, Quaternion, Euler } from 'three';\r\nimport { memo } from 'react';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport { useUser } from './hooks/context';\r\nimport {\r\n  getLargeBulletTexture,\r\n  getNormalBulletTexture,\r\n  getColorfulBulletTextureArray,\r\n  getSplitBulletTexture,\r\n} from '../components/resource';\r\n\r\nconst getRandomInt = (max, min) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n};\r\n\r\n//BasicBullet\r\nconst NormalBullet = memo((props) => {\r\n  const radius = 0.2;\r\n  const speed = 14;\r\n  const [ref, api] = useSphere(() => ({\r\n    mass: 0,\r\n    position: [props.modelPos.x, props.modelPos.y, props.modelPos.z],\r\n    velocity: [...new Vector3(0, 0, -speed).applyEuler(props.modelEuler)],\r\n    args: [radius],\r\n    type: 'Kinematic',\r\n    collisionFilterGroup: props.group,\r\n  }));\r\n\r\n  return (\r\n    <mesh ref={ref}>\r\n      <sphereGeometry args={[radius]} />\r\n      <meshBasicMaterial map={getNormalBulletTexture()} />\r\n    </mesh>\r\n  );\r\n});\r\n\r\n//BasicBullet\r\nconst LargeBullet = memo((props) => {\r\n  const speed = 8;\r\n  const radius = 0.6;\r\n  const [ref, api] = useSphere(() => ({\r\n    mass: 0,\r\n    position: [props.modelPos.x, props.modelPos.y, props.modelPos.z],\r\n    velocity: [...new Vector3(0, 0, -speed).applyEuler(props.modelEuler)],\r\n    args: [radius],\r\n    type: 'Kinematic',\r\n    collisionFilterGroup: props.group,\r\n  }));\r\n\r\n  return (\r\n    <mesh ref={ref}>\r\n      <sphereGeometry args={[radius]} />\r\n      <meshBasicMaterial map={getLargeBulletTexture()} />\r\n    </mesh>\r\n  );\r\n});\r\n\r\n//BasicBullet\r\nconst StopBullet = memo((props) => {\r\n  const textureArray = getColorfulBulletTextureArray();\r\n  const speed = getRandomInt(15, 5);\r\n  const radius = 0.2;\r\n  const [ref, api] = useSphere(() => ({\r\n    mass: 0,\r\n    position: [props.modelPos.x, props.modelPos.y, props.modelPos.z],\r\n    velocity: [\r\n      ...new Vector3(0, getRandomInt(5, -5), -speed).applyEuler(\r\n        props.modelEuler\r\n      ),\r\n    ],\r\n    args: [radius],\r\n    type: 'Kinematic',\r\n    collisionFilterGroup: props.group,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      api.velocity.set(...new Vector3(0, 0, 0));\r\n      api.position.set(api.position);\r\n    }, 2000);\r\n  }, []);\r\n\r\n  return (\r\n    <mesh ref={ref}>\r\n      <sphereGeometry args={[radius]} />\r\n      <meshBasicMaterial\r\n        map={textureArray[getRandomInt(textureArray.length, 0)]}\r\n        opacity={0.5}\r\n      />\r\n    </mesh>\r\n  );\r\n});\r\n\r\n//HOC Bullet\r\nconst SplitBullet = memo((props) => {\r\n  const speed = 10;\r\n  const radius = 0.6;\r\n  const [split, setSplit] = useState(false);\r\n  const pos = useRef();\r\n\r\n  const [ref, api] = useSphere(() => ({\r\n    mass: 0,\r\n    position: [props.modelPos.x, props.modelPos.y, props.modelPos.z],\r\n    velocity: [...new Vector3(0, 0, -speed).applyEuler(props.modelEuler)],\r\n    args: [radius],\r\n    type: 'Kinematic',\r\n    collisionFilterGroup: props.group,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = api.position.subscribe(\r\n      (p) => (pos.current = new Vector3(...p))\r\n    );\r\n    setTimeout(() => {\r\n      api.velocity.set([0, 0, 0]);\r\n      setSplit(true);\r\n    }, 2000);\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return split ? (\r\n    <CircleBullet\r\n      {...props}\r\n      modelPos={pos.current}\r\n      BasicBullet={NormalBullet}\r\n    />\r\n  ) : (\r\n    <mesh ref={ref}>\r\n      <sphereGeometry args={[radius]} />\r\n      <meshBasicMaterial map={getSplitBulletTexture()} opacity={0.5} />\r\n    </mesh>\r\n  );\r\n});\r\n\r\n//HOC Bullet\r\nconst RandomBullet = memo((props) => {\r\n  const sectorNum = 5;\r\n  const sectorAngle = Math.PI / 2;\r\n  const list = [];\r\n\r\n  for (let i = 0; i < sectorNum; i++) {\r\n    const deflectQ = new Quaternion().setFromAxisAngle(\r\n      new Vector3(0, 1, 0),\r\n      sectorAngle / 2 - Math.random() * sectorAngle\r\n    );\r\n    const bulletQ = new Quaternion().setFromEuler(props.modelEuler);\r\n    bulletQ.multiply(deflectQ);\r\n    const bulletEuler = new Euler().setFromQuaternion(bulletQ);\r\n    list.push({\r\n      ...props,\r\n      key: i,\r\n      modelEuler: bulletEuler,\r\n    });\r\n  }\r\n  return list.map((props) => <StopBullet {...props} />);\r\n});\r\n\r\n//HOC Bullet\r\nconst CircleBullet = memo((props) => {\r\n  const circleNum = 12;\r\n  const list = [];\r\n  const { BasicBullet } = props;\r\n\r\n  for (let i = 0; i < circleNum; i++) {\r\n    const deflectQ = new Quaternion().setFromAxisAngle(\r\n      new Vector3(0, 1, 0),\r\n      ((Math.PI * 2) / circleNum) * i\r\n    );\r\n    const bulletQ = new Quaternion().setFromEuler(props.modelEuler);\r\n    bulletQ.multiply(deflectQ);\r\n    const bulletEuler = new Euler().setFromQuaternion(bulletQ);\r\n    list.push({\r\n      ...props,\r\n      key: i,\r\n      modelEuler: bulletEuler,\r\n    });\r\n  }\r\n  return list.map((props) => <BasicBullet {...props} />);\r\n});\r\n\r\nconst Bullet = memo((props) => {\r\n  switch (props.type) {\r\n    case 'shoot0':\r\n      return <NormalBullet {...props} />;\r\n    case 'shoot1':\r\n      return <CircleBullet {...props} BasicBullet={LargeBullet} />;\r\n    case 'shoot2':\r\n      return <RandomBullet {...props} />;\r\n    case 'shoot3':\r\n      return <SplitBullet {...props} />;\r\n  }\r\n});\r\n\r\nexport const Bullets = () => {\r\n  const [bulletList, setBulletList] = useState([]);\r\n  const { playerList } = useNetwork();\r\n  const { playerID } = useUser();\r\n  const lifeTimeArray = [5000, 5000, 12000, 5000];\r\n\r\n  useEffect(() => {\r\n    setBulletList((prev) => {\r\n      const newBulletList = prev ? [...prev] : [];\r\n      for (let i = 0; i < playerList?.length; i++) {\r\n        const player = playerList[i];\r\n        if (!player.rigidState) return;\r\n        if (!player.fireState) return;\r\n        if (!player.rigidState.modelPos) return;\r\n        if (!player.rigidState.modelEuler) return;\r\n\r\n        for (let j = 0; j < player.fireState?.length; j++) {\r\n          newBulletList.push({\r\n            type: player.fireState[j],\r\n            key: Date.now(),\r\n            group: player.playerID === playerID ? 0 : 1,\r\n            modelPos: player.rigidState.modelPos,\r\n            modelEuler: player.rigidState.modelEuler,\r\n          });\r\n        }\r\n      }\r\n      return newBulletList;\r\n    });\r\n  }, [playerList]);\r\n\r\n  useFrame(() => {\r\n    if (!bulletList) return;\r\n    const newBulletList = bulletList.filter(({ type, key }) => {\r\n      const shootIndex = parseInt(type.replace('shoot', ''));\r\n      return Date.now() - key < lifeTimeArray[shootIndex];\r\n    });\r\n    setBulletList(newBulletList ? newBulletList : []);\r\n  });\r\n\r\n  return bulletList?.map((bulletProps) => <Bullet {...bulletProps} />);\r\n};\r\n","import { Canvas } from '@react-three/fiber';\r\nimport { Skybox, Ground } from '../components/environment';\r\nimport { Physics } from '@react-three/cannon';\r\nimport { Players } from './players';\r\nimport styled from 'styled-components';\r\nimport { OptionPanel } from '../components/optionPanel';\r\nimport { useState, useRef, useEffect, memo } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useKeyboard } from './hooks/input';\r\nimport { useNetwork } from './hooks/network';\r\nimport { useUser } from './hooks/context';\r\nimport { Bullets } from './bullets';\r\nimport { GamePageProfile } from '../components/profile';\r\n\r\nconst GamePageWrapper = styled.div`\r\n  width: 1200px;\r\n  height: 675px;\r\n  position: relative;\r\n\r\n  .optionPanel {\r\n    position: absolute;\r\n    transform: translate(-50%, -50%);\r\n    top: 85%;\r\n    left: 78%;\r\n    width: 50%;\r\n    height: 50%;\r\n  }\r\n\r\n  .profile {\r\n    position: absolute;\r\n    top: 0%;\r\n    left: 0%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .resultPanel {\r\n    position: absolute;\r\n    transform: translate(-50%, -50%);\r\n    top: 10%;\r\n    left: 50%;\r\n  }\r\n`;\r\n\r\nconst ResultWrapper = styled.div`\r\n  width: fit-content;\r\n  height: fit-content;\r\n  font-family: DFPOPコン W12;\r\n  font-size: 60pt;\r\n  font-weight: bold;\r\n  color: #05fae7;\r\n`;\r\n\r\nconst keymap = {\r\n  ArrowUp: 'up',\r\n  ArrowDown: 'down',\r\n  ArrowRight: 'right',\r\n  ArrowLeft: 'left',\r\n  KeyZ: 'select',\r\n  KeyQ: 'switch',\r\n};\r\n\r\nconst Scene = memo(() => {\r\n  return (\r\n    <Canvas>\r\n      <Skybox />\r\n      <Physics>\r\n        <Ground />\r\n        <Players />\r\n        <Bullets />\r\n      </Physics>\r\n    </Canvas>\r\n  );\r\n});\r\n\r\nconst GamePage = () => {\r\n  const { playerList, leaveRoom } = useNetwork();\r\n  const {\r\n    roomID,\r\n    playerID,\r\n    location,\r\n    isLeader,\r\n    showBox,\r\n    setShowBox,\r\n    setLocation,\r\n  } = useUser();\r\n  //switch pages\r\n  const navigate = useNavigate();\r\n\r\n  //optionPanel\r\n  const [selection, setSelection] = useState(0);\r\n  const [showOption, setShowOption] = useState(false);\r\n  const optionNumber = 2;\r\n  const options = ['Quit Game', showBox ? 'Hide Box' : 'Show Box'];\r\n  const movement = useKeyboard(keymap);\r\n\r\n  //result\r\n  const [win, setWin] = useState(false);\r\n  const [lose, setLose] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (location === 'game') navigate('/game', { replace: true });\r\n    else if (location === 'room') navigate('/room', { replace: true });\r\n    else if (location === 'home') navigate('/', { replace: true });\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    if (!playerList) return;\r\n    const leader = playerList.filter((player) => player.isLeader)[0];\r\n    const others = playerList.filter((player) => !player.isLeader);\r\n    if (others.length <= 0) return;\r\n    const leaderDead = leader.healthPoints <= 0;\r\n    let AllOthersDead = true;\r\n    others.forEach((player) => {\r\n      if (player.healthPoints > 0 || player.healthPoints === undefined)\r\n        AllOthersDead = false;\r\n    });\r\n    if (isLeader && AllOthersDead && !win) setWin(true);\r\n    else if (isLeader && leaderDead && !lose) setLose(true);\r\n    else if (!isLeader && leaderDead && !win) setWin(true);\r\n    else if (!isLeader && AllOthersDead && !lose) setLose(true);\r\n  }, [playerList]);\r\n\r\n  useEffect(() => {\r\n    if (movement.switch) {\r\n      setShowOption((prev) => !prev);\r\n    }\r\n\r\n    if (!showOption) return;\r\n\r\n    let newSelection = selection;\r\n    if (movement.up) newSelection = selection - 1;\r\n    if (movement.down) newSelection = selection + 1;\r\n    if (newSelection >= optionNumber) newSelection = 0;\r\n    if (newSelection <= -1) newSelection = newSelection + optionNumber;\r\n    setSelection(newSelection);\r\n\r\n    if (movement.select) {\r\n      switch (selection) {\r\n        case 0:\r\n          leaveRoom(roomID, playerID);\r\n          setLocation('home');\r\n          break;\r\n        case 1:\r\n          setShowBox((prev) => !prev);\r\n          break;\r\n      }\r\n    }\r\n  }, [movement]);\r\n\r\n  return (\r\n    <GamePageWrapper>\r\n      <Scene />\r\n      {showOption ? (\r\n        <OptionPanel options={options} selection={selection} />\r\n      ) : null}\r\n      {win || lose ? (\r\n        <ResultWrapper className='resultPanel'>\r\n          {win ? 'YOU WIN' : 'YOU LOSE'}\r\n        </ResultWrapper>\r\n      ) : null}\r\n      <GamePageProfile playerList={playerList} />\r\n    </GamePageWrapper>\r\n  );\r\n};\r\n\r\nexport default GamePage;\r\n"],"names":["characterList","Tools","memo","showBox","immune","dead","visible","args","color","map","getPowerTexture","Model","props","modelName","Character","useBox","mass","type","collisionFilterMask","mask","collisionFilterGroup","group","onCollideBegin","ref","api","useUser","undefined","position","set","x","y","z","RotationCharacter","spin","scale","useState","Euler","rotation","setRotation","useEffect","id","setInterval","prev","pre_q","Quaternion","setFromEuler","delta_q","setFromAxisAngle","Vector3","new_q","multiply","setFromQuaternion","clearInterval","HomeRowWrapper","styled","GameRowWrapper","HomePageProfile","src","name","className","GamePageProfile","playerList","player","index","healthPoints","picture","isLeader","Skybox","useThree","scene","background","getSkyboxTextureArray","Ground","Math","PI","attach","getGroundTexture","yaw_deflection","pitch_deflection","keyMap","KeyW","KeyS","KeyA","KeyD","KeyH","KeyJ","KeyK","KeyL","Space","ShiftLeft","mouseMap","useControl","keyboardMovement","useKeyboard","useMouse","pos","setPos","rot","setRot","modelPos","modelEuler","cameraPos","cameraEuler","rigidState","setRigidState","fireState","setFireState","useSphere","unsubscibe","unsubscibePos","subscribe","p","unsubscibeRot","r","subscribeApi","yaw_right","yaw_left","pitch_up","pitch_down","sphereEuler","sphereQ","yawQ","pitchQ","modelQ","spherePos","offset","applyEuler","addVectors","trackSphere","newFireState","shoot0","push","shoot1","shoot2","shoot3","velocity","MouseMovement","move_forward","factor","slow_down","lin_velocity","normalize","multiplyScalar","ang_velocity","calcVelocity","angularVelocity","fireTimeGap","validateFireTime","fireTimeArray","validFireState","curTime","Date","now","i","length","shootIndex","parseInt","replace","LocalPlayer","updatePlayer","useNetwork","camera","roomID","playerID","setHealthPoints","preUpdateTime","useRef","preFireTime","copy","setFromVector3","current","setTimeout","Players","idx","getRandomInt","max","min","ceil","floor","random","NormalBullet","getNormalBulletTexture","LargeBullet","getLargeBulletTexture","StopBullet","textureArray","getColorfulBulletTextureArray","speed","opacity","SplitBullet","split","setSplit","unsubscribe","CircleBullet","BasicBullet","getSplitBulletTexture","RandomBullet","sectorAngle","list","deflectQ","bulletQ","bulletEuler","key","Bullet","Bullets","bulletList","setBulletList","lifeTimeArray","newBulletList","j","useFrame","filter","bulletProps","GamePageWrapper","ResultWrapper","keymap","ArrowUp","ArrowDown","ArrowRight","ArrowLeft","KeyZ","KeyQ","Scene","leaveRoom","location","setShowBox","setLocation","navigate","useNavigate","selection","setSelection","showOption","setShowOption","options","movement","win","setWin","lose","setLose","leader","others","leaderDead","AllOthersDead","forEach","switch","newSelection","up","down","select"],"sourceRoot":""}
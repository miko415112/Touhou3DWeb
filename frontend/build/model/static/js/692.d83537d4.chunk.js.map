{"version":3,"file":"static/js/692.d83537d4.chunk.js","mappings":"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","sources":["components/character.js","components/info.js","components/modal.js","components/playerCard.js","containers/roomPage.js"],"sourcesContent":["import {\r\n  RemiliaModel,\r\n  KoishiModel,\r\n  SuwakoModel,\r\n  SakuyaModel,\r\n  SanaeModel,\r\n  MeilingModel,\r\n} from './resource';\r\nimport { useState, useEffect, memo } from 'react';\r\nimport { Euler, Quaternion, Vector3 } from 'three';\r\nimport { useBox } from '@react-three/cannon';\r\nimport { useUser } from '../containers/hooks/context';\r\nimport { getPowerTexture } from '../components/resource';\r\n\r\nexport const characterList = [\r\n  'Remilia',\r\n  'Koishi',\r\n  'Suwako',\r\n  'Sakuya',\r\n  'Sanae',\r\n  'Meiling',\r\n];\r\n\r\nconst Tools = memo(({ showBox, immune, dead }) => {\r\n  return (\r\n    <>\r\n      <mesh visible={showBox}>\r\n        <boxGeometry args={[1.3, 1.3, 1.3]} />\r\n        <meshBasicMaterial color={'White'} />\r\n      </mesh>\r\n      <mesh visible={!dead && immune ? true : false}>\r\n        <sphereGeometry args={[1.5]} />\r\n        <meshBasicMaterial color={'#D87D68'} />\r\n      </mesh>\r\n      <mesh visible={dead ? true : false}>\r\n        <boxGeometry args={[2.3, 2.3, 2.3]} />\r\n        <meshBasicMaterial map={getPowerTexture()} />\r\n      </mesh>\r\n    </>\r\n  );\r\n});\r\n\r\nconst Model = (props) => {\r\n  switch (props.modelName) {\r\n    case 'Remilia':\r\n      return <RemiliaModel {...props} />;\r\n    case 'Koishi':\r\n      return <KoishiModel {...props} />;\r\n    case 'Suwako':\r\n      return <SuwakoModel {...props} />;\r\n    case 'Sakuya':\r\n      return <SakuyaModel {...props} />;\r\n    case 'Sanae':\r\n      return <SanaeModel {...props} />;\r\n    case 'Meiling':\r\n      return <MeilingModel {...props} />;\r\n  }\r\n  return <RemiliaModel {...props} />;\r\n};\r\n\r\nexport const Character = (props) => {\r\n  const [ref, api] = useBox(() => ({\r\n    mass: 0,\r\n    type: 'Kinematic',\r\n    args: [1.3, 1.3, 1.3],\r\n    collisionFilterMask: props.mask,\r\n    collisionFilterGroup: props.group,\r\n    onCollideBegin: props.onCollideBegin,\r\n  }));\r\n\r\n  const { showBox } = useUser();\r\n\r\n  if (props.position !== undefined)\r\n    api.position.set(props.position.x, props.position.y, props.position.z);\r\n\r\n  return (\r\n    <>\r\n      <group ref={ref}>\r\n        <Tools showBox={showBox} immune={props.immune} dead={props.dead} />\r\n      </group>\r\n      {props.dead === true ? null : <Model {...props} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const RotationCharacter = ({ modelName, spin, scale }) => {\r\n  const [rotation, setRotation] = useState(new Euler(0, 0, 0));\r\n\r\n  useEffect(() => {\r\n    if (!spin) return;\r\n    const id = setInterval(() => {\r\n      setRotation((prev) => {\r\n        const pre_q = new Quaternion().setFromEuler(prev);\r\n        const delta_q = new Quaternion().setFromAxisAngle(\r\n          new Vector3(0, 1, 0),\r\n          0.1\r\n        );\r\n        const new_q = pre_q.multiply(delta_q);\r\n        return new Euler().setFromQuaternion(new_q);\r\n      });\r\n    }, 60);\r\n    return () => {\r\n      clearInterval(id);\r\n    };\r\n  }, [spin]);\r\n\r\n  return <Character modelName={modelName} rotation={rotation} scale={scale} />;\r\n};\r\n","import { message, notification, Button } from 'antd';\r\nimport {\r\n  CloseCircleFilled,\r\n  CheckCircleFilled,\r\n  CopyFilled,\r\n} from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\n\r\nconst TitleFont = styled.div`\r\n  font-family: Alfa Slab One;\r\n  font-size: 20pt;\r\n  color: Black;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst NameFont = styled.div`\r\n  font-family: Alfa Slab One;\r\n  font-size: 15pt;\r\n  color: Black;\r\n  display: inline;\r\n`;\r\n\r\nconst EmailFont = styled.div`\r\n  font-family: Alfa Slab One;\r\n  font-size: 12pt;\r\n  color: Blue;\r\n  display: inline;\r\n`;\r\n\r\nexport const displayInvitation = (user, onAccept) => {\r\n  notification.open({\r\n    placement: 'bottom',\r\n    message: <TitleFont>Invitation</TitleFont>,\r\n    description: (\r\n      <>\r\n        <NameFont>{`from ${user.name}  `}</NameFont>\r\n        <EmailFont>{`(${user.email}) `}</EmailFont>\r\n      </>\r\n    ),\r\n    duration: 0,\r\n    style: { width: 'fit-content', height: 'fit-content' },\r\n    key: user.name,\r\n    btn: (\r\n      <>\r\n        <Button\r\n          type='link'\r\n          size='small'\r\n          onClick={() => notification.destroy(user.name)}\r\n        >\r\n          Reject\r\n        </Button>\r\n        <Button\r\n          type='primary'\r\n          size='small'\r\n          onClick={() => {\r\n            onAccept();\r\n            notification.destroy(user.name);\r\n          }}\r\n        >\r\n          Accept\r\n        </Button>\r\n      </>\r\n    ),\r\n  });\r\n};\r\n\r\nexport const displayRoomID = (roomID) => {\r\n  notification.open({\r\n    placement: 'bottom',\r\n    message: (\r\n      <>\r\n        <div style={{ display: 'inline', fontSize: '20px' }}>RoomID</div>\r\n        <Button\r\n          onClick={() => {\r\n            navigator.clipboard.writeText(roomID).then(() => {\r\n              const msg = {\r\n                type: 'success',\r\n                msg: 'RoomID copied',\r\n              };\r\n              displayStatus(msg);\r\n            });\r\n          }}\r\n          style={{ border: 'none' }}\r\n          icon={<CopyFilled style={{ fontSize: '20px' }} />}\r\n        />\r\n      </>\r\n    ),\r\n    description: (\r\n      <div style={{ backgroundColor: 'rgba(0,0,0,0.1)', fontSize: '18px' }}>\r\n        {roomID}\r\n      </div>\r\n    ),\r\n    duration: 0,\r\n    style: { width: 'fit-content', height: 'fit-content' },\r\n  });\r\n};\r\n\r\nexport const displayStatus = (s) => {\r\n  if (s.msg) {\r\n    const { type, msg } = s;\r\n    switch (type) {\r\n      case 'success':\r\n        message.success({\r\n          content: msg,\r\n          duration: 3,\r\n          icon: <CheckCircleFilled style={{ fontSize: '25px' }} />,\r\n          style: { fontSize: '20px' },\r\n        });\r\n        break;\r\n      case 'error':\r\n        message.error({\r\n          content: msg,\r\n          duration: 3,\r\n          icon: <CloseCircleFilled style={{ fontSize: '25px' }} />,\r\n          style: { fontSize: '20px' },\r\n        });\r\n        break;\r\n    }\r\n  }\r\n};\r\n","import { Modal, Form, Input, Button } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport {\r\n  UserAddOutlined,\r\n  CheckOutlined,\r\n  CloseOutlined,\r\n  PlusOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst TouhouFont = styled.div`\r\n  font-family: Alfa Slab One;\r\n  font-size: 1.5vw;\r\n  color: Black;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst GoogleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst FriendsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n\r\n  gap: 10px;\r\n  height: 200px;\r\n  overflow: auto;\r\n`;\r\n\r\nconst RequestsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n\r\n  gap: 10px;\r\n  height: 150px;\r\n  overflow: auto;\r\n`;\r\n\r\nconst RowWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  color: Black;\r\n  font-size: 12pt;\r\n  gap: 10px;\r\n  img {\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n`;\r\n\r\nexport const SignInModal = ({ open, callback }) => {\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      title='You need to sign in first'\r\n      footer={null}\r\n      closable={false}\r\n    >\r\n      <GoogleWrapper>\r\n        <GoogleLogin\r\n          onSuccess={callback}\r\n          onError={() => console.log('login failed')}\r\n        />\r\n      </GoogleWrapper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport const JoinRoomModal = ({ open, onJoin, onCancel }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      title='Join an Existing Room'\r\n      okText='Join'\r\n      cancelText='Cancel'\r\n      onCancel={onCancel}\r\n      onOk={() => {\r\n        form.validateFields().then((values) => {\r\n          form.resetFields();\r\n          onJoin(values);\r\n        });\r\n      }}\r\n    >\r\n      <Form form={form} layout='vertical' name='form_in_modal'>\r\n        <TouhouFont>RoomID</TouhouFont>\r\n        <Form.Item\r\n          name='roomID'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Error: Please enter the RoomID',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport const ChangeNameModal = ({ open, onSave, onCancel }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      okText='Save'\r\n      cancelText='Cancel'\r\n      onCancel={onCancel}\r\n      onOk={() => {\r\n        form.validateFields().then((values) => {\r\n          form.resetFields();\r\n          onSave(values);\r\n        });\r\n      }}\r\n    >\r\n      <Form form={form} layout='vertical' name='form_in_modal'>\r\n        <TouhouFont>Enter your new name</TouhouFont>\r\n        <Form.Item\r\n          name='name'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Error: Please enter your name',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport const FriendsModal = ({\r\n  open,\r\n  requests,\r\n  friends,\r\n  onCancel,\r\n  onAddFriend,\r\n  onAcceptFriend,\r\n  onDeleteFriend,\r\n  onDeleteRequest,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Modal open={open} footer={null} onCancel={onCancel}>\r\n      <TouhouFont>friends request</TouhouFont>\r\n      <RequestsWrapper>\r\n        {requests?.map((request, idx) => {\r\n          return (\r\n            <RowWrapper key={idx}>\r\n              <img src={request.picture} />\r\n              <div>{request.name}</div>\r\n              <div>{request.email}</div>\r\n              <Button\r\n                onClick={() => {\r\n                  onDeleteRequest(request.email);\r\n                }}\r\n                size='small'\r\n                icon={<CloseOutlined />}\r\n              />\r\n              <Button\r\n                size='small'\r\n                onClick={() => {\r\n                  onAcceptFriend(request.email);\r\n                }}\r\n                icon={<CheckOutlined />}\r\n              />\r\n            </RowWrapper>\r\n          );\r\n        })}\r\n      </RequestsWrapper>\r\n      <TouhouFont>your friends</TouhouFont>\r\n      <FriendsWrapper>\r\n        {friends?.map((friend, idx) => {\r\n          return (\r\n            <RowWrapper key={idx}>\r\n              <img src={friend.picture} />\r\n              <div>{friend.name}</div>\r\n              <div>{friend.email}</div>\r\n              <Button\r\n                onClick={() => {\r\n                  onDeleteFriend(friend.email);\r\n                }}\r\n                size='small'\r\n                icon={<CloseOutlined />}\r\n              />\r\n            </RowWrapper>\r\n          );\r\n        })}\r\n      </FriendsWrapper>\r\n\r\n      <Form form={form} layout='vertical' name='form_in_modal'>\r\n        <TouhouFont>Enter user email</TouhouFont>\r\n        <Form.Item\r\n          name='email'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Error: Please enter user email',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            placeholder='input user email'\r\n            suffix={\r\n              <Button\r\n                size='large'\r\n                icon={<UserAddOutlined />}\r\n                onClick={() => {\r\n                  form.validateFields().then((values) => {\r\n                    form.resetFields();\r\n                    onAddFriend(values);\r\n                  });\r\n                }}\r\n              />\r\n            }\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport const InviteModal = ({\r\n  open,\r\n  friends,\r\n  onlineFriends,\r\n  onInvite,\r\n  onCancel,\r\n}) => {\r\n  const offlineFriends = friends.filter(\r\n    (friend) =>\r\n      !onlineFriends.some((onlineFriend) => onlineFriend.email === friend.email)\r\n  );\r\n\r\n  return (\r\n    <Modal open={open} footer={null} onCancel={onCancel}>\r\n      <TouhouFont>Online Friends</TouhouFont>\r\n\r\n      <FriendsWrapper>\r\n        {onlineFriends?.map((friend, idx) => {\r\n          return (\r\n            <RowWrapper key={idx}>\r\n              <img src={friend.picture} />\r\n              <div>{friend.name}</div>\r\n              <div>{friend.email}</div>\r\n              <Button\r\n                onClick={() => {\r\n                  onInvite(friend.email);\r\n                }}\r\n                size='small'\r\n                icon={<PlusOutlined />}\r\n              />\r\n            </RowWrapper>\r\n          );\r\n        })}\r\n      </FriendsWrapper>\r\n\r\n      <TouhouFont>Offline Friends</TouhouFont>\r\n      <RequestsWrapper>\r\n        {offlineFriends?.map((friend, idx) => {\r\n          return (\r\n            <RowWrapper key={idx}>\r\n              <img src={friend.picture} />\r\n              <div>{friend.name}</div>\r\n              <div>{friend.email}</div>\r\n            </RowWrapper>\r\n          );\r\n        })}\r\n      </RequestsWrapper>\r\n    </Modal>\r\n  );\r\n};\r\n","import { forwardRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  LoadingOutlined,\r\n  CheckCircleOutlined,\r\n  SyncOutlined,\r\n  RightSquareTwoTone,\r\n  LeftSquareTwoTone,\r\n  AimOutlined,\r\n} from '@ant-design/icons';\r\nimport { Tag } from 'antd';\r\nimport { nameBorderImage, charaBorderImage } from './resource';\r\n\r\nconst PlayerWrapper = styled.div`\r\n  width: 200px;\r\n  height: 300px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: start;\r\n  align-items: center;\r\n  gap: 20px;\r\n`;\r\n\r\nconst BoxWrapper = styled.div`\r\n  -webkit-border-image: url(${charaBorderImage}) 30 30 round;\r\n  -moz-border-image: url(${charaBorderImage}) 30 30 round;\r\n  -o-border-image: url(${charaBorderImage}) 30 30 round;\r\n  background-color: rgba(255, 255, 255, 0.35);\r\n  width: 100%;\r\n  height: 80%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .chara {\r\n    width: 100%;\r\n    height: 70%;\r\n  }\r\n\r\n  .ant-tag {\r\n    margin: 5px;\r\n    padding: 5px;\r\n    font-size: 15pt;\r\n  }\r\n\r\n  position: relative;\r\n  .right_arrow {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 120%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n  .left_arrow {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: -20%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n`;\r\n\r\nconst NameWrapper = styled.div`\r\n  -webkit-border-image: url(${nameBorderImage}) 30 30 round;\r\n  -moz-border-image: url(${nameBorderImage}) 30 30 round;\r\n  -o-border-image: url(${nameBorderImage}) 30 30 round;\r\n  background-color: rgba(255, 255, 255, 0.6);\r\n  width: 100%;\r\n  height: 20%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .name {\r\n    font-size: 15pt;\r\n  }\r\n`;\r\n\r\nexport const PlayerCard = forwardRef((props, ref) => {\r\n  const { name, state, showArrow, isLeader } = props;\r\n  let color = '';\r\n  let icon = null;\r\n  switch (state) {\r\n    case 'choosing':\r\n      color = 'processing';\r\n      icon = <SyncOutlined spin />;\r\n      break;\r\n    case 'ready':\r\n      color = 'green';\r\n      icon = <CheckCircleOutlined />;\r\n      break;\r\n    case 'waiting':\r\n      color = 'purple';\r\n      icon = <LoadingOutlined />;\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <PlayerWrapper>\r\n      <NameWrapper>\r\n        {isLeader ? (\r\n          <AimOutlined style={{ color: 'Yellow', fontSize: '25px' }} />\r\n        ) : null}\r\n        <div className='name'>{name}</div>\r\n      </NameWrapper>\r\n      <BoxWrapper>\r\n        <div ref={ref} className='chara'></div>\r\n        <Tag color={color} icon={icon}>\r\n          {state}\r\n        </Tag>\r\n        {showArrow == true ? (\r\n          <>\r\n            <LeftSquareTwoTone\r\n              className='left_arrow'\r\n              style={{ fontSize: '40px' }}\r\n            />\r\n            <RightSquareTwoTone\r\n              className='right_arrow'\r\n              style={{ fontSize: '40px' }}\r\n            />\r\n          </>\r\n        ) : null}\r\n      </BoxWrapper>\r\n    </PlayerWrapper>\r\n  );\r\n});\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { View } from '@react-three/drei';\r\nimport styled from 'styled-components';\r\nimport { Physics } from '@react-three/cannon';\r\n\r\nimport { roomBackgroundImage } from '../components/resource';\r\nimport { RotationCharacter, characterList } from '../components/character';\r\nimport { PlayerCard } from '../components/playerCard';\r\nimport { useKeyboard } from './hooks/input';\r\nimport { OptionPanel } from '../components/optionPanel';\r\nimport { useUser } from './hooks/context';\r\nimport { displayRoomID, displayStatus } from '../components/info';\r\nimport { useNetwork } from './hooks/network';\r\nimport { InviteModal } from '../components/modal';\r\n\r\nconst keymap = {\r\n  ArrowUp: 'up',\r\n  ArrowDown: 'down',\r\n  ArrowRight: 'right',\r\n  ArrowLeft: 'left',\r\n  KeyZ: 'select',\r\n};\r\n\r\nconst RoomPageWrapper = styled.div`\r\n  background-image: url(${roomBackgroundImage});\r\n  background-repeat: no-repeat;\r\n  width: 1200px;\r\n  height: 675px;\r\n  position: relative;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .canvas {\r\n    position: fixed !important;\r\n    top: 0px;\r\n    left: 0px;\r\n  }\r\n`;\r\n\r\nconst OptionSectionWrapper = styled.div`\r\n  width: 25%;\r\n  height: 60%;\r\n  display: flex;\r\n`;\r\n\r\nconst PlayerSectionWrapper = styled.div`\r\n  width: 75%;\r\n  height: 100%;\r\n`;\r\n\r\nconst SectionWrapper = styled.div`\r\n  width: 100%;\r\n  height: 50%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  gap: 20px;\r\n`;\r\n\r\nconst RoomPage = () => {\r\n  //optionPanel\r\n  const [selection, setSelection] = useState(4);\r\n  const optionNumber = 5;\r\n  const textOptions = ['Start', 'Quit', 'Invite', 'RoomID'];\r\n  const movement = useKeyboard(keymap);\r\n\r\n  //control modal\r\n  const [inviteModalOpen, setInviteModalOpen] = useState(false);\r\n\r\n  //save data\r\n  const [modelIndex, setModelIndex] = useState(0);\r\n  const [state, setState] = useState('choosing');\r\n  const [me, setMe] = useState();\r\n  const [others, setOthers] = useState();\r\n  const [friends, setFriends] = useState([]);\r\n  const [onlineFriends, setOnlineFriends] = useState([]);\r\n  const {\r\n    google,\r\n    location,\r\n    roomID,\r\n    playerID,\r\n    setLocation,\r\n    setModelName,\r\n    setIsLeader,\r\n  } = useUser();\r\n\r\n  //useNetwork\r\n  const {\r\n    message,\r\n    playerList,\r\n    roomState,\r\n    leaveRoom,\r\n    inviteFriend,\r\n    startGame,\r\n    updatePlayer,\r\n    openFriendSystem,\r\n  } = useNetwork();\r\n\r\n  //switch pages\r\n  const navigate = useNavigate();\r\n\r\n  //bind 3D model  to div\r\n  const canvasRef = useRef();\r\n  const player0Ref = useRef();\r\n  const player1Ref = useRef();\r\n  const player2Ref = useRef();\r\n  const player3Ref = useRef();\r\n  const playerRefArray = useRef([player1Ref, player2Ref, player3Ref]);\r\n\r\n  const OnInviteFriend = (email_to) => {\r\n    inviteFriend(playerID, email_to, roomID);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (location === 'game') navigate('/game', { replace: true });\r\n    else if (location === 'room') navigate('/room', { replace: true });\r\n    else if (location === 'home') navigate('/', { replace: true });\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    if (!playerList) return;\r\n    const newMe = playerList?.filter(\r\n      (player) => player.playerID === playerID\r\n    )[0];\r\n\r\n    const newOthers = playerList?.filter(\r\n      (player) => player.playerID !== playerID\r\n    );\r\n\r\n    if (newOthers?.length < 3) {\r\n      const emptyNum = 3 - newOthers.length;\r\n      for (let i = 1; i <= emptyNum; i++) {\r\n        newOthers.push({ state: 'waiting' });\r\n      }\r\n    }\r\n\r\n    setMe(newMe);\r\n    setOthers(newOthers);\r\n    setModelName(newMe?.modelName);\r\n    setIsLeader(newMe.isLeader === true);\r\n  }, [playerList]);\r\n\r\n  useEffect(() => {\r\n    if (roomState === 'playing') {\r\n      setLocation('game');\r\n    }\r\n  }, [roomState]);\r\n\r\n  useEffect(() => {\r\n    let newSelection = selection;\r\n    if (movement.up) newSelection = selection - 1;\r\n    if (movement.down) newSelection = selection + 1;\r\n    if (newSelection >= optionNumber) newSelection = 0;\r\n    if (newSelection <= -1) newSelection = newSelection + optionNumber;\r\n    setSelection(newSelection);\r\n\r\n    if (newSelection === optionNumber - 1) {\r\n      let newModelIndex = modelIndex;\r\n      if (movement.right) newModelIndex++;\r\n      if (movement.left) newModelIndex--;\r\n      if (newModelIndex >= characterList.length) newModelIndex = 0;\r\n      if (newModelIndex <= -1) newModelIndex = characterList.length - 1;\r\n      setModelIndex(newModelIndex);\r\n      setState('choosing');\r\n    }\r\n\r\n    if (movement.select) {\r\n      switch (selection) {\r\n        case 0:\r\n          startGame(roomID);\r\n          break;\r\n        case 1:\r\n          leaveRoom(roomID, playerID);\r\n          setLocation('home');\r\n          break;\r\n        case 2:\r\n          openFriendSystem(google.email);\r\n          setInviteModalOpen(true);\r\n          break;\r\n        case 3:\r\n          displayRoomID(roomID);\r\n          break;\r\n        case 4:\r\n          setState('ready');\r\n          setSelection(0);\r\n          break;\r\n      }\r\n    }\r\n  }, [movement]);\r\n\r\n  useEffect(() => {\r\n    updatePlayer(roomID, playerID, {\r\n      modelName: characterList[modelIndex],\r\n      state: state,\r\n    });\r\n  }, [modelIndex, state]);\r\n\r\n  useEffect(() => {\r\n    displayStatus(message);\r\n    if (message.type === 'success') {\r\n      switch (message.event) {\r\n        case 'Start_Game':\r\n          setLocation('game');\r\n          break;\r\n        case 'Open_FriendSystem':\r\n          setOnlineFriends(message.onlineFriends);\r\n          setFriends(message.friends);\r\n          break;\r\n      }\r\n    }\r\n  }, [message]);\r\n\r\n  return (\r\n    <>\r\n      <InviteModal\r\n        open={inviteModalOpen}\r\n        friends={friends}\r\n        onInvite={OnInviteFriend}\r\n        onlineFriends={onlineFriends}\r\n        onCancel={() => setInviteModalOpen(false)}\r\n      ></InviteModal>\r\n      <RoomPageWrapper ref={canvasRef}>\r\n        <PlayerSectionWrapper>\r\n          <SectionWrapper>\r\n            <PlayerCard\r\n              ref={player0Ref}\r\n              name={me?.name}\r\n              state={me?.state}\r\n              isLeader={me?.isLeader}\r\n              showArrow={selection === optionNumber - 1}\r\n            />\r\n          </SectionWrapper>\r\n          <SectionWrapper>\r\n            {others?.map((other, index) => (\r\n              <PlayerCard\r\n                key={index}\r\n                ref={playerRefArray.current[index]}\r\n                name={other.name}\r\n                state={other.state}\r\n                modelName={other.modelName}\r\n                isLeader={other.isLeader}\r\n              />\r\n            ))}\r\n          </SectionWrapper>\r\n        </PlayerSectionWrapper>\r\n        <Canvas eventSource={canvasRef} className='canvas'>\r\n          <Physics>\r\n            {\r\n              <View track={player0Ref}>\r\n                <RotationCharacter\r\n                  spin={me?.state === 'choosing'}\r\n                  modelName={me?.modelName}\r\n                  scale={0.23}\r\n                />\r\n              </View>\r\n            }\r\n            {others?.map((other, index) =>\r\n              other.state !== 'waiting' ? (\r\n                <View track={playerRefArray.current[index]} key={index}>\r\n                  <RotationCharacter\r\n                    spin={other.state === 'choosing'}\r\n                    modelName={other.modelName}\r\n                    scale={0.23}\r\n                  />\r\n                </View>\r\n              ) : null\r\n            )}\r\n          </Physics>\r\n        </Canvas>\r\n        <OptionSectionWrapper>\r\n          <OptionPanel options={textOptions} selection={selection} />\r\n        </OptionSectionWrapper>\r\n      </RoomPageWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoomPage;\r\n"],"names":["characterList","Tools","memo","showBox","immune","dead","visible","args","color","map","getPowerTexture","Model","props","modelName","Character","useBox","mass","type","collisionFilterMask","mask","collisionFilterGroup","group","onCollideBegin","ref","api","useUser","undefined","position","set","x","y","z","RotationCharacter","spin","scale","useState","Euler","rotation","setRotation","useEffect","id","setInterval","prev","pre_q","Quaternion","setFromEuler","delta_q","setFromAxisAngle","Vector3","new_q","multiply","setFromQuaternion","clearInterval","TitleFont","styled","NameFont","EmailFont","displayInvitation","user","onAccept","notification","placement","message","description","name","email","duration","style","width","height","key","btn","size","onClick","displayRoomID","roomID","display","fontSize","navigator","clipboard","writeText","then","displayStatus","msg","border","icon","backgroundColor","s","content","TouhouFont","GoogleWrapper","FriendsWrapper","RequestsWrapper","RowWrapper","SignInModal","open","callback","title","footer","closable","onSuccess","onError","console","log","JoinRoomModal","onJoin","onCancel","Form","form","okText","cancelText","onOk","validateFields","values","resetFields","layout","rules","required","ChangeNameModal","onSave","FriendsModal","requests","friends","onAddFriend","onAcceptFriend","onDeleteFriend","onDeleteRequest","request","idx","src","picture","friend","placeholder","suffix","InviteModal","onlineFriends","onInvite","offlineFriends","filter","some","onlineFriend","PlayerWrapper","BoxWrapper","charaBorderImage","NameWrapper","nameBorderImage","PlayerCard","forwardRef","state","showArrow","isLeader","SyncOutlined","CheckCircleOutlined","LoadingOutlined","AimOutlined","className","LeftSquareTwoTone","RightSquareTwoTone","keymap","ArrowUp","ArrowDown","ArrowRight","ArrowLeft","KeyZ","RoomPageWrapper","roomBackgroundImage","OptionSectionWrapper","PlayerSectionWrapper","SectionWrapper","selection","setSelection","movement","useKeyboard","inviteModalOpen","setInviteModalOpen","modelIndex","setModelIndex","setState","me","setMe","others","setOthers","setFriends","setOnlineFriends","google","location","playerID","setLocation","setModelName","setIsLeader","useNetwork","playerList","roomState","leaveRoom","inviteFriend","startGame","updatePlayer","openFriendSystem","navigate","useNavigate","canvasRef","useRef","player0Ref","player1Ref","player2Ref","player3Ref","playerRefArray","replace","newMe","player","newOthers","length","emptyNum","i","push","newSelection","up","down","optionNumber","newModelIndex","right","left","select","event","email_to","other","index","current","eventSource","View","track","options"],"sourceRoot":""}